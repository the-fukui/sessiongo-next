# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateSession_tags {
  _avg: Session_tagsAvgAggregate
  _count: Session_tagsCountAggregate
  _max: Session_tagsMaxAggregate
  _min: Session_tagsMinAggregate
  _sum: Session_tagsSumAggregate
}

type AggregateSessions {
  _avg: SessionsAvgAggregate
  _count: SessionsCountAggregate
  _max: SessionsMaxAggregate
  _min: SessionsMinAggregate
  _sum: SessionsSumAggregate
}

type AggregateSessions_session_tags {
  _avg: Sessions_session_tagsAvgAggregate
  _count: Sessions_session_tagsCountAggregate
  _max: Sessions_session_tagsMaxAggregate
  _min: Sessions_session_tagsMinAggregate
  _sum: Sessions_session_tagsSumAggregate
}

type AggregateUsers {
  _avg: UsersAvgAggregate
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  _sum: UsersSumAggregate
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input DateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input EnumstatusFieldUpdateOperationsInput {
  set: status
}

input EnumstatusFilter {
  equals: status
  in: [status!]
  not: NestedEnumstatusFilter
  notIn: [status!]
}

input EnumstatusWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumstatusFilter
  _min: NestedEnumstatusFilter
  equals: status
  in: [status!]
  not: NestedEnumstatusWithAggregatesFilter
  notIn: [status!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Mutation {
  createManySession_tags(data: [Session_tagsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySessions(data: [SessionsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManySessions_session_tags(data: [Sessions_session_tagsCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUsers(data: [UsersCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createSession_tags(data: Session_tagsUncheckedCreateInput!): Session_tags!
  createSessions(data: SessionsUncheckedCreateInput!): Sessions!
  createSessions_session_tags(data: Sessions_session_tagsUncheckedCreateInput!): Sessions_session_tags!
  createUsers(data: UsersUncheckedCreateInput!): Users!
  deleteManySession_tags(where: Session_tagsWhereInput): AffectedRowsOutput!
  deleteManySessions(where: SessionsWhereInput): AffectedRowsOutput!
  deleteManySessions_session_tags(where: Sessions_session_tagsWhereInput): AffectedRowsOutput!
  deleteManyUsers(where: UsersWhereInput): AffectedRowsOutput!
  deleteSession_tags(where: Session_tagsWhereUniqueInput!): Session_tags
  deleteSessions(where: SessionsWhereUniqueInput!): Sessions
  deleteSessions_session_tags(where: Sessions_session_tagsWhereUniqueInput!): Sessions_session_tags
  deleteUsers(where: UsersWhereUniqueInput!): Users
  updateManySession_tags(data: Session_tagsUncheckedUpdateManyInput!, where: Session_tagsWhereInput): AffectedRowsOutput!
  updateManySessions(data: SessionsUncheckedUpdateManyInput!, where: SessionsWhereInput): AffectedRowsOutput!
  updateManySessions_session_tags(data: Sessions_session_tagsUncheckedUpdateManyInput!, where: Sessions_session_tagsWhereInput): AffectedRowsOutput!
  updateManyUsers(data: UsersUncheckedUpdateManyInput!, where: UsersWhereInput): AffectedRowsOutput!
  updateSession_tags(data: Session_tagsUncheckedUpdateInput!, where: Session_tagsWhereUniqueInput!): Session_tags
  updateSessions(data: SessionsUncheckedUpdateInput!, where: SessionsWhereUniqueInput!): Sessions
  updateSessions_session_tags(data: Sessions_session_tagsUncheckedUpdateInput!, where: Sessions_session_tagsWhereUniqueInput!): Sessions_session_tags
  updateUsers(data: UsersUncheckedUpdateInput!, where: UsersWhereUniqueInput!): Users
  upsertSession_tags(create: Session_tagsUncheckedCreateInput!, update: Session_tagsUncheckedUpdateInput!, where: Session_tagsWhereUniqueInput!): Session_tags!
  upsertSessions(create: SessionsUncheckedCreateInput!, update: SessionsUncheckedUpdateInput!, where: SessionsWhereUniqueInput!): Sessions!
  upsertSessions_session_tags(create: Sessions_session_tagsUncheckedCreateInput!, update: Sessions_session_tagsUncheckedUpdateInput!, where: Sessions_session_tagsWhereUniqueInput!): Sessions_session_tags!
  upsertUsers(create: UsersUncheckedCreateInput!, update: UsersUncheckedUpdateInput!, where: UsersWhereUniqueInput!): Users!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedDateTimeNullableFilter
  _min: NestedDateTimeNullableFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime!]
}

input NestedEnumstatusFilter {
  equals: status
  in: [status!]
  not: NestedEnumstatusFilter
  notIn: [status!]
}

input NestedEnumstatusWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumstatusFilter
  _min: NestedEnumstatusFilter
  equals: status
  in: [status!]
  not: NestedEnumstatusWithAggregatesFilter
  notIn: [status!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  aggregateSession_tags(cursor: Session_tagsWhereUniqueInput, orderBy: [Session_tagsOrderByWithRelationInput!], skip: Int, take: Int, where: Session_tagsWhereInput): AggregateSession_tags!
  aggregateSessions(cursor: SessionsWhereUniqueInput, orderBy: [SessionsOrderByWithRelationInput!], skip: Int, take: Int, where: SessionsWhereInput): AggregateSessions!
  aggregateSessions_session_tags(cursor: Sessions_session_tagsWhereUniqueInput, orderBy: [Sessions_session_tagsOrderByWithRelationInput!], skip: Int, take: Int, where: Sessions_session_tagsWhereInput): AggregateSessions_session_tags!
  aggregateUsers(cursor: UsersWhereUniqueInput, orderBy: [UsersOrderByWithRelationInput!], skip: Int, take: Int, where: UsersWhereInput): AggregateUsers!
  findFirstSession_tags(cursor: Session_tagsWhereUniqueInput, distinct: [Session_tagsScalarFieldEnum!], orderBy: [Session_tagsOrderByWithRelationInput!], skip: Int, take: Int, where: Session_tagsWhereInput): Session_tags
  findFirstSessions(cursor: SessionsWhereUniqueInput, distinct: [SessionsScalarFieldEnum!], orderBy: [SessionsOrderByWithRelationInput!], skip: Int, take: Int, where: SessionsWhereInput): Sessions
  findFirstSessions_session_tags(cursor: Sessions_session_tagsWhereUniqueInput, distinct: [Sessions_session_tagsScalarFieldEnum!], orderBy: [Sessions_session_tagsOrderByWithRelationInput!], skip: Int, take: Int, where: Sessions_session_tagsWhereInput): Sessions_session_tags
  findFirstUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationInput!], skip: Int, take: Int, where: UsersWhereInput): Users
  findManySession_tags(cursor: Session_tagsWhereUniqueInput, distinct: [Session_tagsScalarFieldEnum!], orderBy: [Session_tagsOrderByWithRelationInput!], skip: Int, take: Int, where: Session_tagsWhereInput): [Session_tags!]!
  findManySessions(cursor: SessionsWhereUniqueInput, distinct: [SessionsScalarFieldEnum!], orderBy: [SessionsOrderByWithRelationInput!], skip: Int, take: Int, where: SessionsWhereInput): [Sessions!]!
  findManySessions_session_tags(cursor: Sessions_session_tagsWhereUniqueInput, distinct: [Sessions_session_tagsScalarFieldEnum!], orderBy: [Sessions_session_tagsOrderByWithRelationInput!], skip: Int, take: Int, where: Sessions_session_tagsWhereInput): [Sessions_session_tags!]!
  findManyUsers(cursor: UsersWhereUniqueInput, distinct: [UsersScalarFieldEnum!], orderBy: [UsersOrderByWithRelationInput!], skip: Int, take: Int, where: UsersWhereInput): [Users!]!
  findUniqueSession_tags(where: Session_tagsWhereUniqueInput!): Session_tags
  findUniqueSessions(where: SessionsWhereUniqueInput!): Sessions
  findUniqueSessions_session_tags(where: Sessions_session_tagsWhereUniqueInput!): Sessions_session_tags
  findUniqueUsers(where: UsersWhereUniqueInput!): Users
  groupBySession_tags(by: [Session_tagsScalarFieldEnum!]!, having: Session_tagsScalarWhereWithAggregatesInput, orderBy: [Session_tagsOrderByWithAggregationInput!], skip: Int, take: Int, where: Session_tagsWhereInput): [Session_tagsGroupBy!]!
  groupBySessions(by: [SessionsScalarFieldEnum!]!, having: SessionsScalarWhereWithAggregatesInput, orderBy: [SessionsOrderByWithAggregationInput!], skip: Int, take: Int, where: SessionsWhereInput): [SessionsGroupBy!]!
  groupBySessions_session_tags(by: [Sessions_session_tagsScalarFieldEnum!]!, having: Sessions_session_tagsScalarWhereWithAggregatesInput, orderBy: [Sessions_session_tagsOrderByWithAggregationInput!], skip: Int, take: Int, where: Sessions_session_tagsWhereInput): [Sessions_session_tagsGroupBy!]!
  groupByUsers(by: [UsersScalarFieldEnum!]!, having: UsersScalarWhereWithAggregatesInput, orderBy: [UsersOrderByWithAggregationInput!], skip: Int, take: Int, where: UsersWhereInput): [UsersGroupBy!]!
}

type Session_tags {
  _count: Session_tagsCount
  created_at: DateTime!
  id: Int!
  label: String!
  sessions(cursor: Sessions_session_tagsWhereUniqueInput, distinct: [Sessions_session_tagsScalarFieldEnum!], orderBy: [Sessions_session_tagsOrderByWithRelationInput!], skip: Int, take: Int, where: Sessions_session_tagsWhereInput): [Sessions_session_tags!]!
  slug: String!
  updated_at: DateTime!
}

type Session_tagsAvgAggregate {
  id: Float
}

input Session_tagsAvgOrderByAggregateInput {
  id: SortOrder
}

type Session_tagsCount {
  sessions: Int!
}

type Session_tagsCountAggregate {
  _all: Int!
  created_at: Int!
  id: Int!
  label: Int!
  slug: Int!
  updated_at: Int!
}

input Session_tagsCountOrderByAggregateInput {
  created_at: SortOrder
  id: SortOrder
  label: SortOrder
  slug: SortOrder
  updated_at: SortOrder
}

input Session_tagsCreateManyInput {
  created_at: DateTime
  id: Int
  label: String!
  slug: String
  updated_at: DateTime
}

input Session_tagsCreateNestedOneWithoutSessionsInput {
  connect: Session_tagsWhereUniqueInput
  connectOrCreate: Session_tagsCreateOrConnectWithoutSessionsInput
  create: Session_tagsUncheckedCreateWithoutSessionsInput
}

input Session_tagsCreateOrConnectWithoutSessionsInput {
  create: Session_tagsUncheckedCreateWithoutSessionsInput!
  where: Session_tagsWhereUniqueInput!
}

type Session_tagsGroupBy {
  _avg: Session_tagsAvgAggregate
  _count: Session_tagsCountAggregate
  _max: Session_tagsMaxAggregate
  _min: Session_tagsMinAggregate
  _sum: Session_tagsSumAggregate
  created_at: DateTime!
  id: Int!
  label: String!
  slug: String!
  updated_at: DateTime!
}

type Session_tagsMaxAggregate {
  created_at: DateTime
  id: Int
  label: String
  slug: String
  updated_at: DateTime
}

input Session_tagsMaxOrderByAggregateInput {
  created_at: SortOrder
  id: SortOrder
  label: SortOrder
  slug: SortOrder
  updated_at: SortOrder
}

type Session_tagsMinAggregate {
  created_at: DateTime
  id: Int
  label: String
  slug: String
  updated_at: DateTime
}

input Session_tagsMinOrderByAggregateInput {
  created_at: SortOrder
  id: SortOrder
  label: SortOrder
  slug: SortOrder
  updated_at: SortOrder
}

input Session_tagsOrderByWithAggregationInput {
  _avg: Session_tagsAvgOrderByAggregateInput
  _count: Session_tagsCountOrderByAggregateInput
  _max: Session_tagsMaxOrderByAggregateInput
  _min: Session_tagsMinOrderByAggregateInput
  _sum: Session_tagsSumOrderByAggregateInput
  created_at: SortOrder
  id: SortOrder
  label: SortOrder
  slug: SortOrder
  updated_at: SortOrder
}

input Session_tagsOrderByWithRelationInput {
  created_at: SortOrder
  id: SortOrder
  label: SortOrder
  sessions: Sessions_session_tagsOrderByRelationAggregateInput
  slug: SortOrder
  updated_at: SortOrder
}

input Session_tagsRelationFilter {
  is: Session_tagsWhereInput
  isNot: Session_tagsWhereInput
}

enum Session_tagsScalarFieldEnum {
  created_at
  id
  label
  slug
  updated_at
}

input Session_tagsScalarWhereWithAggregatesInput {
  AND: [Session_tagsScalarWhereWithAggregatesInput!]
  NOT: [Session_tagsScalarWhereWithAggregatesInput!]
  OR: [Session_tagsScalarWhereWithAggregatesInput!]
  created_at: DateTimeWithAggregatesFilter
  id: IntWithAggregatesFilter
  label: StringWithAggregatesFilter
  slug: StringWithAggregatesFilter
  updated_at: DateTimeWithAggregatesFilter
}

type Session_tagsSumAggregate {
  id: Int
}

input Session_tagsSumOrderByAggregateInput {
  id: SortOrder
}

input Session_tagsUncheckedCreateInput {
  created_at: DateTime
  id: Int
  label: String!
  sessions: Sessions_session_tagsUncheckedCreateNestedManyWithoutTagInput
  slug: String
  updated_at: DateTime
}

input Session_tagsUncheckedCreateWithoutSessionsInput {
  created_at: DateTime
  id: Int
  label: String!
  slug: String
  updated_at: DateTime
}

input Session_tagsUncheckedUpdateInput {
  created_at: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  sessions: Sessions_session_tagsUncheckedUpdateManyWithoutTagInput
  slug: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input Session_tagsUncheckedUpdateManyInput {
  created_at: DateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  label: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input Session_tagsWhereInput {
  AND: [Session_tagsWhereInput!]
  NOT: [Session_tagsWhereInput!]
  OR: [Session_tagsWhereInput!]
  created_at: DateTimeFilter
  id: IntFilter
  label: StringFilter
  sessions: Sessions_session_tagsListRelationFilter
  slug: StringFilter
  updated_at: DateTimeFilter
}

input Session_tagsWhereUniqueInput {
  id: Int
  slug: String
}

type Sessions {
  _count: SessionsCount
  author: Users!
  author_id: Int!
  content: String!
  created_at: DateTime!
  ended_at: DateTime
  id: Int!
  slug: String!
  started_at: DateTime!
  status: status!
  tags(cursor: Sessions_session_tagsWhereUniqueInput, distinct: [Sessions_session_tagsScalarFieldEnum!], orderBy: [Sessions_session_tagsOrderByWithRelationInput!], skip: Int, take: Int, where: Sessions_session_tagsWhereInput): [Sessions_session_tags!]!
  title: String!
  updated_at: DateTime!
}

type SessionsAvgAggregate {
  author_id: Float
  id: Float
}

input SessionsAvgOrderByAggregateInput {
  author_id: SortOrder
  id: SortOrder
}

type SessionsCount {
  tags: Int!
}

type SessionsCountAggregate {
  _all: Int!
  author_id: Int!
  content: Int!
  created_at: Int!
  ended_at: Int!
  id: Int!
  slug: Int!
  started_at: Int!
  status: Int!
  title: Int!
  updated_at: Int!
}

input SessionsCountOrderByAggregateInput {
  author_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  ended_at: SortOrder
  id: SortOrder
  slug: SortOrder
  started_at: SortOrder
  status: SortOrder
  title: SortOrder
  updated_at: SortOrder
}

input SessionsCreateManyAuthorInput {
  content: String!
  created_at: DateTime
  ended_at: DateTime
  id: Int
  slug: String
  started_at: DateTime
  status: status
  title: String!
  updated_at: DateTime
}

input SessionsCreateManyAuthorInputEnvelope {
  data: [SessionsCreateManyAuthorInput!]!
  skipDuplicates: Boolean
}

input SessionsCreateManyInput {
  author_id: Int!
  content: String!
  created_at: DateTime
  ended_at: DateTime
  id: Int
  slug: String
  started_at: DateTime
  status: status
  title: String!
  updated_at: DateTime
}

input SessionsCreateNestedOneWithoutTagsInput {
  connect: SessionsWhereUniqueInput
  connectOrCreate: SessionsCreateOrConnectWithoutTagsInput
  create: SessionsUncheckedCreateWithoutTagsInput
}

input SessionsCreateOrConnectWithoutAuthorInput {
  create: SessionsUncheckedCreateWithoutAuthorInput!
  where: SessionsWhereUniqueInput!
}

input SessionsCreateOrConnectWithoutTagsInput {
  create: SessionsUncheckedCreateWithoutTagsInput!
  where: SessionsWhereUniqueInput!
}

input SessionsCreateWithoutAuthorInput {
  content: String!
  created_at: DateTime
  ended_at: DateTime
  slug: String
  started_at: DateTime
  status: status
  tags: Sessions_session_tagsCreateNestedManyWithoutSessionInput
  title: String!
  updated_at: DateTime
}

type SessionsGroupBy {
  _avg: SessionsAvgAggregate
  _count: SessionsCountAggregate
  _max: SessionsMaxAggregate
  _min: SessionsMinAggregate
  _sum: SessionsSumAggregate
  author_id: Int!
  content: String!
  created_at: DateTime!
  ended_at: DateTime
  id: Int!
  slug: String!
  started_at: DateTime!
  status: status!
  title: String!
  updated_at: DateTime!
}

input SessionsListRelationFilter {
  every: SessionsWhereInput
  none: SessionsWhereInput
  some: SessionsWhereInput
}

type SessionsMaxAggregate {
  author_id: Int
  content: String
  created_at: DateTime
  ended_at: DateTime
  id: Int
  slug: String
  started_at: DateTime
  status: status
  title: String
  updated_at: DateTime
}

input SessionsMaxOrderByAggregateInput {
  author_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  ended_at: SortOrder
  id: SortOrder
  slug: SortOrder
  started_at: SortOrder
  status: SortOrder
  title: SortOrder
  updated_at: SortOrder
}

type SessionsMinAggregate {
  author_id: Int
  content: String
  created_at: DateTime
  ended_at: DateTime
  id: Int
  slug: String
  started_at: DateTime
  status: status
  title: String
  updated_at: DateTime
}

input SessionsMinOrderByAggregateInput {
  author_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  ended_at: SortOrder
  id: SortOrder
  slug: SortOrder
  started_at: SortOrder
  status: SortOrder
  title: SortOrder
  updated_at: SortOrder
}

input SessionsOrderByRelationAggregateInput {
  _count: SortOrder
}

input SessionsOrderByWithAggregationInput {
  _avg: SessionsAvgOrderByAggregateInput
  _count: SessionsCountOrderByAggregateInput
  _max: SessionsMaxOrderByAggregateInput
  _min: SessionsMinOrderByAggregateInput
  _sum: SessionsSumOrderByAggregateInput
  author_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  ended_at: SortOrder
  id: SortOrder
  slug: SortOrder
  started_at: SortOrder
  status: SortOrder
  title: SortOrder
  updated_at: SortOrder
}

input SessionsOrderByWithRelationInput {
  author: UsersOrderByWithRelationInput
  author_id: SortOrder
  content: SortOrder
  created_at: SortOrder
  ended_at: SortOrder
  id: SortOrder
  slug: SortOrder
  started_at: SortOrder
  status: SortOrder
  tags: Sessions_session_tagsOrderByRelationAggregateInput
  title: SortOrder
  updated_at: SortOrder
}

input SessionsRelationFilter {
  is: SessionsWhereInput
  isNot: SessionsWhereInput
}

enum SessionsScalarFieldEnum {
  author_id
  content
  created_at
  ended_at
  id
  slug
  started_at
  status
  title
  updated_at
}

input SessionsScalarWhereInput {
  AND: [SessionsScalarWhereInput!]
  NOT: [SessionsScalarWhereInput!]
  OR: [SessionsScalarWhereInput!]
  author_id: IntFilter
  content: StringFilter
  created_at: DateTimeFilter
  ended_at: DateTimeNullableFilter
  id: IntFilter
  slug: StringFilter
  started_at: DateTimeFilter
  status: EnumstatusFilter
  title: StringFilter
  updated_at: DateTimeFilter
}

input SessionsScalarWhereWithAggregatesInput {
  AND: [SessionsScalarWhereWithAggregatesInput!]
  NOT: [SessionsScalarWhereWithAggregatesInput!]
  OR: [SessionsScalarWhereWithAggregatesInput!]
  author_id: IntWithAggregatesFilter
  content: StringWithAggregatesFilter
  created_at: DateTimeWithAggregatesFilter
  ended_at: DateTimeNullableWithAggregatesFilter
  id: IntWithAggregatesFilter
  slug: StringWithAggregatesFilter
  started_at: DateTimeWithAggregatesFilter
  status: EnumstatusWithAggregatesFilter
  title: StringWithAggregatesFilter
  updated_at: DateTimeWithAggregatesFilter
}

type SessionsSumAggregate {
  author_id: Int
  id: Int
}

input SessionsSumOrderByAggregateInput {
  author_id: SortOrder
  id: SortOrder
}

input SessionsUncheckedCreateInput {
  author_id: Int!
  content: String!
  created_at: DateTime
  ended_at: DateTime
  id: Int
  slug: String
  started_at: DateTime
  status: status
  tags: Sessions_session_tagsUncheckedCreateNestedManyWithoutSessionInput
  title: String!
  updated_at: DateTime
}

input SessionsUncheckedCreateNestedManyWithoutAuthorInput {
  connect: [SessionsWhereUniqueInput!]
  connectOrCreate: [SessionsCreateOrConnectWithoutAuthorInput!]
  create: [SessionsCreateWithoutAuthorInput!]
  createMany: SessionsCreateManyAuthorInputEnvelope
}

input SessionsUncheckedCreateWithoutAuthorInput {
  content: String!
  created_at: DateTime
  ended_at: DateTime
  id: Int
  slug: String
  started_at: DateTime
  status: status
  tags: Sessions_session_tagsUncheckedCreateNestedManyWithoutSessionInput
  title: String!
  updated_at: DateTime
}

input SessionsUncheckedCreateWithoutTagsInput {
  author_id: Int!
  content: String!
  created_at: DateTime
  ended_at: DateTime
  id: Int
  slug: String
  started_at: DateTime
  status: status
  title: String!
  updated_at: DateTime
}

input SessionsUncheckedUpdateInput {
  author_id: IntFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ended_at: NullableDateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  started_at: DateTimeFieldUpdateOperationsInput
  status: EnumstatusFieldUpdateOperationsInput
  tags: Sessions_session_tagsUncheckedUpdateManyWithoutSessionInput
  title: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input SessionsUncheckedUpdateManyInput {
  author_id: IntFieldUpdateOperationsInput
  content: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ended_at: NullableDateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  started_at: DateTimeFieldUpdateOperationsInput
  status: EnumstatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input SessionsUncheckedUpdateManyWithoutAuthorInput {
  connect: [SessionsWhereUniqueInput!]
  connectOrCreate: [SessionsCreateOrConnectWithoutAuthorInput!]
  create: [SessionsCreateWithoutAuthorInput!]
  createMany: SessionsCreateManyAuthorInputEnvelope
  delete: [SessionsWhereUniqueInput!]
  deleteMany: [SessionsScalarWhereInput!]
  disconnect: [SessionsWhereUniqueInput!]
  set: [SessionsWhereUniqueInput!]
  update: [SessionsUpdateWithWhereUniqueWithoutAuthorInput!]
  updateMany: [SessionsUpdateManyWithWhereWithoutAuthorInput!]
  upsert: [SessionsUpsertWithWhereUniqueWithoutAuthorInput!]
}

input SessionsUncheckedUpdateManyWithoutSessionsInput {
  content: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ended_at: NullableDateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  started_at: DateTimeFieldUpdateOperationsInput
  status: EnumstatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input SessionsUncheckedUpdateWithoutAuthorInput {
  content: StringFieldUpdateOperationsInput
  created_at: DateTimeFieldUpdateOperationsInput
  ended_at: NullableDateTimeFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  started_at: DateTimeFieldUpdateOperationsInput
  status: EnumstatusFieldUpdateOperationsInput
  tags: Sessions_session_tagsUncheckedUpdateManyWithoutSessionInput
  title: StringFieldUpdateOperationsInput
  updated_at: DateTimeFieldUpdateOperationsInput
}

input SessionsUpdateManyWithWhereWithoutAuthorInput {
  data: SessionsUncheckedUpdateManyWithoutSessionsInput!
  where: SessionsScalarWhereInput!
}

input SessionsUpdateWithWhereUniqueWithoutAuthorInput {
  data: SessionsUncheckedUpdateWithoutAuthorInput!
  where: SessionsWhereUniqueInput!
}

input SessionsUpsertWithWhereUniqueWithoutAuthorInput {
  create: SessionsUncheckedCreateWithoutAuthorInput!
  update: SessionsUncheckedUpdateWithoutAuthorInput!
  where: SessionsWhereUniqueInput!
}

input SessionsWhereInput {
  AND: [SessionsWhereInput!]
  NOT: [SessionsWhereInput!]
  OR: [SessionsWhereInput!]
  author: UsersRelationFilter
  author_id: IntFilter
  content: StringFilter
  created_at: DateTimeFilter
  ended_at: DateTimeNullableFilter
  id: IntFilter
  slug: StringFilter
  started_at: DateTimeFilter
  status: EnumstatusFilter
  tags: Sessions_session_tagsListRelationFilter
  title: StringFilter
  updated_at: DateTimeFilter
}

input SessionsWhereUniqueInput {
  id: Int
  slug: String
}

type Sessions_session_tags {
  session: Sessions!
  session_id: Int!
  tag: Session_tags!
  tag_id: Int!
}

type Sessions_session_tagsAvgAggregate {
  session_id: Float
  tag_id: Float
}

input Sessions_session_tagsAvgOrderByAggregateInput {
  session_id: SortOrder
  tag_id: SortOrder
}

type Sessions_session_tagsCountAggregate {
  _all: Int!
  session_id: Int!
  tag_id: Int!
}

input Sessions_session_tagsCountOrderByAggregateInput {
  session_id: SortOrder
  tag_id: SortOrder
}

input Sessions_session_tagsCreateManyInput {
  session_id: Int!
  tag_id: Int!
}

input Sessions_session_tagsCreateManySessionInput {
  tag_id: Int!
}

input Sessions_session_tagsCreateManySessionInputEnvelope {
  data: [Sessions_session_tagsCreateManySessionInput!]!
  skipDuplicates: Boolean
}

input Sessions_session_tagsCreateManyTagInput {
  session_id: Int!
}

input Sessions_session_tagsCreateManyTagInputEnvelope {
  data: [Sessions_session_tagsCreateManyTagInput!]!
  skipDuplicates: Boolean
}

input Sessions_session_tagsCreateNestedManyWithoutSessionInput {
  connect: [Sessions_session_tagsWhereUniqueInput!]
  connectOrCreate: [Sessions_session_tagsCreateOrConnectWithoutSessionInput!]
  create: [Sessions_session_tagsCreateWithoutSessionInput!]
  createMany: Sessions_session_tagsCreateManySessionInputEnvelope
}

input Sessions_session_tagsCreateOrConnectWithoutSessionInput {
  create: Sessions_session_tagsUncheckedCreateWithoutSessionInput!
  where: Sessions_session_tagsWhereUniqueInput!
}

input Sessions_session_tagsCreateOrConnectWithoutTagInput {
  create: Sessions_session_tagsUncheckedCreateWithoutTagInput!
  where: Sessions_session_tagsWhereUniqueInput!
}

input Sessions_session_tagsCreateWithoutSessionInput {
  tag: Session_tagsCreateNestedOneWithoutSessionsInput!
}

input Sessions_session_tagsCreateWithoutTagInput {
  session: SessionsCreateNestedOneWithoutTagsInput!
}

type Sessions_session_tagsGroupBy {
  _avg: Sessions_session_tagsAvgAggregate
  _count: Sessions_session_tagsCountAggregate
  _max: Sessions_session_tagsMaxAggregate
  _min: Sessions_session_tagsMinAggregate
  _sum: Sessions_session_tagsSumAggregate
  session_id: Int!
  tag_id: Int!
}

input Sessions_session_tagsListRelationFilter {
  every: Sessions_session_tagsWhereInput
  none: Sessions_session_tagsWhereInput
  some: Sessions_session_tagsWhereInput
}

type Sessions_session_tagsMaxAggregate {
  session_id: Int
  tag_id: Int
}

input Sessions_session_tagsMaxOrderByAggregateInput {
  session_id: SortOrder
  tag_id: SortOrder
}

type Sessions_session_tagsMinAggregate {
  session_id: Int
  tag_id: Int
}

input Sessions_session_tagsMinOrderByAggregateInput {
  session_id: SortOrder
  tag_id: SortOrder
}

input Sessions_session_tagsOrderByRelationAggregateInput {
  _count: SortOrder
}

input Sessions_session_tagsOrderByWithAggregationInput {
  _avg: Sessions_session_tagsAvgOrderByAggregateInput
  _count: Sessions_session_tagsCountOrderByAggregateInput
  _max: Sessions_session_tagsMaxOrderByAggregateInput
  _min: Sessions_session_tagsMinOrderByAggregateInput
  _sum: Sessions_session_tagsSumOrderByAggregateInput
  session_id: SortOrder
  tag_id: SortOrder
}

input Sessions_session_tagsOrderByWithRelationInput {
  session: SessionsOrderByWithRelationInput
  session_id: SortOrder
  tag: Session_tagsOrderByWithRelationInput
  tag_id: SortOrder
}

enum Sessions_session_tagsScalarFieldEnum {
  session_id
  tag_id
}

input Sessions_session_tagsScalarWhereInput {
  AND: [Sessions_session_tagsScalarWhereInput!]
  NOT: [Sessions_session_tagsScalarWhereInput!]
  OR: [Sessions_session_tagsScalarWhereInput!]
  session_id: IntFilter
  tag_id: IntFilter
}

input Sessions_session_tagsScalarWhereWithAggregatesInput {
  AND: [Sessions_session_tagsScalarWhereWithAggregatesInput!]
  NOT: [Sessions_session_tagsScalarWhereWithAggregatesInput!]
  OR: [Sessions_session_tagsScalarWhereWithAggregatesInput!]
  session_id: IntWithAggregatesFilter
  tag_id: IntWithAggregatesFilter
}

type Sessions_session_tagsSumAggregate {
  session_id: Int
  tag_id: Int
}

input Sessions_session_tagsSumOrderByAggregateInput {
  session_id: SortOrder
  tag_id: SortOrder
}

input Sessions_session_tagsUncheckedCreateInput {
  session_id: Int!
  tag_id: Int!
}

input Sessions_session_tagsUncheckedCreateNestedManyWithoutSessionInput {
  connect: [Sessions_session_tagsWhereUniqueInput!]
  connectOrCreate: [Sessions_session_tagsCreateOrConnectWithoutSessionInput!]
  create: [Sessions_session_tagsCreateWithoutSessionInput!]
  createMany: Sessions_session_tagsCreateManySessionInputEnvelope
}

input Sessions_session_tagsUncheckedCreateNestedManyWithoutTagInput {
  connect: [Sessions_session_tagsWhereUniqueInput!]
  connectOrCreate: [Sessions_session_tagsCreateOrConnectWithoutTagInput!]
  create: [Sessions_session_tagsCreateWithoutTagInput!]
  createMany: Sessions_session_tagsCreateManyTagInputEnvelope
}

input Sessions_session_tagsUncheckedCreateWithoutSessionInput {
  tag_id: Int!
}

input Sessions_session_tagsUncheckedCreateWithoutTagInput {
  session_id: Int!
}

input Sessions_session_tagsUncheckedUpdateInput {
  session_id: IntFieldUpdateOperationsInput
  tag_id: IntFieldUpdateOperationsInput
}

input Sessions_session_tagsUncheckedUpdateManyInput {
  session_id: IntFieldUpdateOperationsInput
  tag_id: IntFieldUpdateOperationsInput
}

input Sessions_session_tagsUncheckedUpdateManyWithoutSessionInput {
  connect: [Sessions_session_tagsWhereUniqueInput!]
  connectOrCreate: [Sessions_session_tagsCreateOrConnectWithoutSessionInput!]
  create: [Sessions_session_tagsCreateWithoutSessionInput!]
  createMany: Sessions_session_tagsCreateManySessionInputEnvelope
  delete: [Sessions_session_tagsWhereUniqueInput!]
  deleteMany: [Sessions_session_tagsScalarWhereInput!]
  disconnect: [Sessions_session_tagsWhereUniqueInput!]
  set: [Sessions_session_tagsWhereUniqueInput!]
  update: [Sessions_session_tagsUpdateWithWhereUniqueWithoutSessionInput!]
  updateMany: [Sessions_session_tagsUpdateManyWithWhereWithoutSessionInput!]
  upsert: [Sessions_session_tagsUpsertWithWhereUniqueWithoutSessionInput!]
}

input Sessions_session_tagsUncheckedUpdateManyWithoutSessionsInput {
  session_id: IntFieldUpdateOperationsInput
}

input Sessions_session_tagsUncheckedUpdateManyWithoutTagInput {
  connect: [Sessions_session_tagsWhereUniqueInput!]
  connectOrCreate: [Sessions_session_tagsCreateOrConnectWithoutTagInput!]
  create: [Sessions_session_tagsCreateWithoutTagInput!]
  createMany: Sessions_session_tagsCreateManyTagInputEnvelope
  delete: [Sessions_session_tagsWhereUniqueInput!]
  deleteMany: [Sessions_session_tagsScalarWhereInput!]
  disconnect: [Sessions_session_tagsWhereUniqueInput!]
  set: [Sessions_session_tagsWhereUniqueInput!]
  update: [Sessions_session_tagsUpdateWithWhereUniqueWithoutTagInput!]
  updateMany: [Sessions_session_tagsUpdateManyWithWhereWithoutTagInput!]
  upsert: [Sessions_session_tagsUpsertWithWhereUniqueWithoutTagInput!]
}

input Sessions_session_tagsUncheckedUpdateManyWithoutTagsInput {
  tag_id: IntFieldUpdateOperationsInput
}

input Sessions_session_tagsUncheckedUpdateWithoutSessionInput {
  tag_id: IntFieldUpdateOperationsInput
}

input Sessions_session_tagsUncheckedUpdateWithoutTagInput {
  session_id: IntFieldUpdateOperationsInput
}

input Sessions_session_tagsUpdateManyWithWhereWithoutSessionInput {
  data: Sessions_session_tagsUncheckedUpdateManyWithoutTagsInput!
  where: Sessions_session_tagsScalarWhereInput!
}

input Sessions_session_tagsUpdateManyWithWhereWithoutTagInput {
  data: Sessions_session_tagsUncheckedUpdateManyWithoutSessionsInput!
  where: Sessions_session_tagsScalarWhereInput!
}

input Sessions_session_tagsUpdateWithWhereUniqueWithoutSessionInput {
  data: Sessions_session_tagsUncheckedUpdateWithoutSessionInput!
  where: Sessions_session_tagsWhereUniqueInput!
}

input Sessions_session_tagsUpdateWithWhereUniqueWithoutTagInput {
  data: Sessions_session_tagsUncheckedUpdateWithoutTagInput!
  where: Sessions_session_tagsWhereUniqueInput!
}

input Sessions_session_tagsUpsertWithWhereUniqueWithoutSessionInput {
  create: Sessions_session_tagsUncheckedCreateWithoutSessionInput!
  update: Sessions_session_tagsUncheckedUpdateWithoutSessionInput!
  where: Sessions_session_tagsWhereUniqueInput!
}

input Sessions_session_tagsUpsertWithWhereUniqueWithoutTagInput {
  create: Sessions_session_tagsUncheckedCreateWithoutTagInput!
  update: Sessions_session_tagsUncheckedUpdateWithoutTagInput!
  where: Sessions_session_tagsWhereUniqueInput!
}

input Sessions_session_tagsWhereInput {
  AND: [Sessions_session_tagsWhereInput!]
  NOT: [Sessions_session_tagsWhereInput!]
  OR: [Sessions_session_tagsWhereInput!]
  session: SessionsRelationFilter
  session_id: IntFilter
  tag: Session_tagsRelationFilter
  tag_id: IntFilter
}

input Sessions_session_tagsWhereUniqueInput {
  session_id_tag_id: sessions_session_tagsSession_idTag_idCompoundUniqueInput
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type Users {
  _count: UsersCount
  auth_id: String!
  id: Int!
  name: String
  sessions(cursor: SessionsWhereUniqueInput, distinct: [SessionsScalarFieldEnum!], orderBy: [SessionsOrderByWithRelationInput!], skip: Int, take: Int, where: SessionsWhereInput): [Sessions!]!
  user_name: String!
}

type UsersAvgAggregate {
  id: Float
}

input UsersAvgOrderByAggregateInput {
  id: SortOrder
}

type UsersCount {
  sessions: Int!
}

type UsersCountAggregate {
  _all: Int!
  auth_id: Int!
  id: Int!
  name: Int!
  user_name: Int!
}

input UsersCountOrderByAggregateInput {
  auth_id: SortOrder
  id: SortOrder
  name: SortOrder
  user_name: SortOrder
}

input UsersCreateManyInput {
  auth_id: String!
  id: Int
  name: String
  user_name: String
}

type UsersGroupBy {
  _avg: UsersAvgAggregate
  _count: UsersCountAggregate
  _max: UsersMaxAggregate
  _min: UsersMinAggregate
  _sum: UsersSumAggregate
  auth_id: String!
  id: Int!
  name: String
  user_name: String!
}

type UsersMaxAggregate {
  auth_id: String
  id: Int
  name: String
  user_name: String
}

input UsersMaxOrderByAggregateInput {
  auth_id: SortOrder
  id: SortOrder
  name: SortOrder
  user_name: SortOrder
}

type UsersMinAggregate {
  auth_id: String
  id: Int
  name: String
  user_name: String
}

input UsersMinOrderByAggregateInput {
  auth_id: SortOrder
  id: SortOrder
  name: SortOrder
  user_name: SortOrder
}

input UsersOrderByWithAggregationInput {
  _avg: UsersAvgOrderByAggregateInput
  _count: UsersCountOrderByAggregateInput
  _max: UsersMaxOrderByAggregateInput
  _min: UsersMinOrderByAggregateInput
  _sum: UsersSumOrderByAggregateInput
  auth_id: SortOrder
  id: SortOrder
  name: SortOrder
  user_name: SortOrder
}

input UsersOrderByWithRelationInput {
  auth_id: SortOrder
  id: SortOrder
  name: SortOrder
  sessions: SessionsOrderByRelationAggregateInput
  user_name: SortOrder
}

input UsersRelationFilter {
  is: UsersWhereInput
  isNot: UsersWhereInput
}

enum UsersScalarFieldEnum {
  auth_id
  id
  name
  user_name
}

input UsersScalarWhereWithAggregatesInput {
  AND: [UsersScalarWhereWithAggregatesInput!]
  NOT: [UsersScalarWhereWithAggregatesInput!]
  OR: [UsersScalarWhereWithAggregatesInput!]
  auth_id: StringWithAggregatesFilter
  id: IntWithAggregatesFilter
  name: StringNullableWithAggregatesFilter
  user_name: StringWithAggregatesFilter
}

type UsersSumAggregate {
  id: Int
}

input UsersSumOrderByAggregateInput {
  id: SortOrder
}

input UsersUncheckedCreateInput {
  auth_id: String!
  id: Int
  name: String
  sessions: SessionsUncheckedCreateNestedManyWithoutAuthorInput
  user_name: String
}

input UsersUncheckedUpdateInput {
  auth_id: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  sessions: SessionsUncheckedUpdateManyWithoutAuthorInput
  user_name: StringFieldUpdateOperationsInput
}

input UsersUncheckedUpdateManyInput {
  auth_id: StringFieldUpdateOperationsInput
  id: IntFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  user_name: StringFieldUpdateOperationsInput
}

input UsersWhereInput {
  AND: [UsersWhereInput!]
  NOT: [UsersWhereInput!]
  OR: [UsersWhereInput!]
  auth_id: StringFilter
  id: IntFilter
  name: StringNullableFilter
  sessions: SessionsListRelationFilter
  user_name: StringFilter
}

input UsersWhereUniqueInput {
  auth_id: String
  id: Int
  user_name: String
}

input sessions_session_tagsSession_idTag_idCompoundUniqueInput {
  session_id: Int!
  tag_id: Int!
}

enum status {
  DRAFT
  PUBLISHED
}
